+ f *.mp3 | f *.MP3 | f *.mp4 | f *.MP4 | f *.avi | f *.AVI | f *.mkv | f *.MKV & t r
c castnow
  clear
  echo "%d/%f"
  nodejs /usr/local/bin/castnow --tomp4 "%f"

+ f * & t t
A move to "BitTorrentSync" folder
  set %t
  while [ -n "$1" ] ; do
    mv "$1" "/media/hdd/BitTorrentSync/$(basename "$1")"
    shift
  done
  
+ f * & t t
D Delete
  set %t
  while [ -n "$1" ] ; do
    rm -rf "$1"
    shift
  done

= d *
C Copy
  tmux send -t cloud.1 'rsync -a --info=progress2 %D/ %d' ENTER
  tmux select-window -t pi:cloud
  tmux select-pane -t cloud.1
  tmux -2 attach -t pi

= d *
C Move
  tmux send -t cloud.1 'rsync -a --remove-source-files --info=progress2 %D/ %d' ENTER
  tmux select-window -t pi:cloud
  tmux select-pane -t cloud.1
  tmux -2 attach -t pi

+ f * & t t
B move to "Freebox Server" folder
  if [ -f /tmp/.freebox.sh ] ; then whiptail --title "Move to Freebox" --msgbox "Busy try Later..." 12 35; exit; fi
  cat > /tmp/.freebox.sh << 'EOF'
  clear
  sudo mount -t cifs //mafreebox.freebox.fr/Server\ Freebox/  /media/freebox -o user=freebox,password=mini4K,uid=1000,gid=1000,rw,sec=ntlm
  cd "%d"
  for f in %t; do
    rsync -aP --remove-sent-files "$f" /media/freebox
  done
  pushbullet push all note "Raspberry Pi" "Files moved to Freebox Server"
  rm /tmp/.freebox.sh
  EOF
  tmux has-session -t pi ; if [ "$?" -eq 1 ] ; then ~/service/tmux ; fi
  tmux send -t bash.1 'sh /tmp/.freebox.sh' ENTER
  tmux select-window -t pi:bash
  tmux select-pane -t bash.1
  tmux -2 attach -t pi

+ f * & t t
B upload to dropbox
  if [ -f /tmp/.dropbox.sh ] ; then whiptail --title "Upload to Dropbox" --msgbox "Busy try Later..." 12 35; exit; fi
  cat > /tmp/.dropbox.sh << 'EOF'
  clear
  cd "%d"
  for f in %t; do
    dropbox_uploader upload "$f" "$f"
  done
  pushbullet push all note "Raspberry Pi" "Files Uploaded to Dropbox"
  rm /tmp/.dropbox.sh
  EOF
  tmux has-session -t pi ; if [ "$?" -eq 1 ] ; then ~/service/tmux ; fi
  tmux send -t cloud.2 'sh /tmp/.dropbox.sh' ENTER
  tmux select-window -t pi:cloud
  tmux select-pane -t cloud.2
  tmux -2 attach -t pi

+ f * & t r
C download from dropbox
  dropbox_uploader download %{Dropbox Filename}

+ f * & t t
D upload to google drive
  if [ -f /tmp/.gdrive.sh ] ; then whiptail --title "Upload to Google Drivex" --msgbox "Busy try Later..." 12 35; exit; fi
  cat > /tmp/.gdrive.sh << 'EOF'
  clear
  rm -rf /home/pi/gdrive/*
  mkdir ~/gdrive/Upload
  cd "%d"
  for f in %t; do
    cp "$f" ~/gdrive/Upload
  done
  cd ~/gdrive
  drive push --quiet Upload/*.*
  pushbullet push al note "Raspberry Pi" "Files Uploaded to Google Drive"
  rm /tmp/.gdrive.sh
  EOF
  tmux has-session -t pi ; if [ "$?" -eq 1 ] ; then ~/service/tmux ; fi
  tmux send -t cloud.1 'sh /tmp/.gdrive.sh' ENTER
  tmux select-window -t pi:cloud
  tmux select-pane -t cloud.1
  tmux -2 attach -t pi

+ f * & t r
E download from google drive
  drive pull %{Dropbox Filename}

+ f * & t r
A Tmux Session A
  tmux send -t AB.1 'cd ~/service && clear' ENTER
  tmux send -t AB.1 'sh %f' ENTER
  tmux select-window -t pi:AB
  tmux select-pane -t AB.1
  tmux -2 attach -t pi
  
+ f * & t r
B Tmux Session B
  tmux send -t AB.2 'cd ~/service && clear' ENTER
  tmux send -t AB.2 'sh %f' ENTER
  tmux select-window -t pi:AB
  tmux select-pane -t AB.2
  tmux -2 attach -t pi

+ f * & t r
C Tmux Session C
  tmux send -t CD.1 'cd ~/service && clear' ENTER
  tmux send -t CD.1 'sh %f' ENTER
  tmux select-window -t pi:CD
  tmux select-pane -t CD.1
  tmux -2 attach -t pi
  
+ f * & t r
D Tmux Session D
  tmux send -t CD.2 'cd ~/service && clear' ENTER
  tmux send -t CD.2 'sh %f' ENTER
  tmux select-window -t pi:CD
  tmux select-pane -t CD.2
  tmux -2 attach -t pi

+ f * & t r
E Tmux Session E
  tmux send -t EF.1 'cd ~/service && clear' ENTER
  tmux send -t EF.1 'sh %f' ENTER
  tmux select-window -t pi:EF
  tmux select-pane -t EF.1
  tmux -2 attach -t pi
  
+ f * & t r
F Tmux Session F
  tmux send -t EF.2 'cd ~/service && clear' ENTER
  tmux send -t EF.2 'sh %f' ENTER
  tmux select-window -t pi:EF
  tmux select-pane -t EF.2
  tmux -2 attach -t pi
  
+ f *.avi | f *.AVI | f *.mov | f *.MOV | f *.mp4 | f *.MP4 & t t
y upload to youtube [youtube screen]
  cat > /tmp/youtube_task.sh << 'EOF'
  mkdir /media/hdd/tmp
  clear
  cd "%d"
  for f in %t; do
    mv "$f" /media/hdd/tmp/video.avi
    youtube-upload --title="$f" --category="Entertainment" --privacy="private" \
    --location="=" --client-secrets="/home/pi/.config/youtube.json" /media/hdd/tmp/video.avi
    mv /media/hdd/tmp/video.avi "$f"
    pushbullet push all note "Raspberry Pi" "La vidéo $f est maintenant sur YouTube"
  done
  EOF
  tmux has-session -t youtube
  if [ "$?" -eq 1 ] ; then tmux new-session -d -s youtube ; fi
  tmux send -t youtube 'sh /tmp/youtube_task.sh' ENTER

+ f *.mov | f *.MOV | f *.avi | f *.AVI & tr
c cut video [no screen]
  clear
  read -e -p "Start : " -i "00:00:00" start
  read -e -p "Stop  : " -i "00:00:00" stop
  echo "Please Wait..."
  mpv -ss $start -endpos $stop -really-quiet -ovc copy -oac pcm %f -o %b-CUT.%x
  pushbullet push all note "Rasperry Pi" "La vidéos %d.avi est coupée"

+ f *.jpg | f *.JPG & t t
s Autolevel photos
  set %t
  while [ -n "$1" ]; do
    mogrify -auto-level $1
    shift
  done

+ f *.jpg | f *.JPG & t t
e Ecrit l'EXIF des photos
  DAT=%{YYYY:MM:DD}
  set %t
  while [ -n "$1" ] ; do
    exiv2 -M "add Exif.Photo.DateTimeOriginal $DAT 00:00:00" $1
    shift
  done
  
+ f *.jpg | f *.JPG & t r
e Affiche l'EXIF de la photo
  clear
  exiv2 %f
  printf 'Press [Enter] key to continue...'
  read null

+ f *.pdf | f *.PDF & t t
p Transforme un fichier PDF sécurisé en normal
  set %t
  while [ -n "$1" ]; do
    gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile="$1.test.pdf" "$1"
    shift
  done

+ f *.eps | f *.EPS | f *.ai | f *.AI & t t
s Convertir Un fichier EPS,AI en SVG
  set %t
  while [ -n "$1" ]; do
    pstoedit -f plot-svg $1 $1.svg
    shift
  done
