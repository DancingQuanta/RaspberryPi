cat > ~/checkjpg_task.sh << 'EOF'
  if [ ! -f /usr/bin/exiv2 ]; then echo "ERROR: Please install exiv2"; exit; fi
  printf "IMG_XXXXX.JPG:DIR  DA TE==>EXIF DA TE\n" > "/tmp/photos.txt"
  # Loop through files, renaming each to a YYYY:MM:DD_HH:MM:SS_#####.JPG based name
  COUNTER=1
  find "%d" -iname "*.jpg" -type f | sort | while read FILE ; do 
  EXIF=`exiv2 "$FILE" 2> null | grep "Image timestamp" | cut -d ' ' -f 4 | tr ':' '-'`
  EXI=`echo "$EXIF" | cut -d '-' -f 1,2 | tr '-' ' '`
  EXI1=`date -d "$EXIF -1 month" +"%%Y %%m"`
  DAT=`echo "$(dirname "$FILE")" | rev | cut -d '/' -f 1 | rev | cut -d ' ' -f  1 | cut -d '-' -f 1,2 | tr '-' ' '`
  echo "EXIF : --$EXI-- EXI1 : --$EXI1-- DATE : --$DAT--"
    if [ -z "$EXI" ]; then
      printf "$(basename "$FILE"):" >> "/tmp/photos.txt" 
      printf "$DAT==>$EXI" >> "/tmp/photos.txt"
      printf " NO  DA TE" >> "/tmp/photos.txt"
      printf "\n" >> "/tmp/photos.txt"
    fi
    if [[ "$DAT" != "$EXI" && "$DAT" != "$EXI1" ]]; then
      printf "$(basename "$FILE"):" >> "/tmp/photos.txt" 
      printf "$DAT==>$EXI" >> "/tmp/photos.txt"
      printf " NOT MATCH" >> "/tmp/photos.txt"
      printf "\n" >> "/tmp/photos.txt"
    fi
  done
  rm ~/checkjpg_task.sh
  pushbullet push all note "Rasperry Pi" "Photos Control Done"
  EOF
  tmux has-session -t photos
  if [ "$?" -eq 1 ] ; then tmux new-session -d -s photos ; fi
  tmux send -t photos 'sh ~/checkjpg_task.sh' ENTER
